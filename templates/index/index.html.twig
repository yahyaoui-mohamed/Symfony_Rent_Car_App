{% extends 'base.html.twig' %}

{% block title %}Morent | Home{% endblock %}

{% block body %}

{% include "navbar.html.twig" %}

<div class="hero">
	<div class="container">
	
		<div class="row">

			<div class="col-lg-6">
				<div class="hero-card left">
					<h5>The best platform <br/> for Car Rental</h5>
					<p>Ease of doing car rental safely and <br/> reliably. Of course at low price.</p>
					<button>Rental Car</button>
					<img src="/images/car1.png" alt="image1" width={406} height={116}/>
				</div>
			</div>

			<div class="col-lg-6">
				<div class="hero-card right">
					<h5>Easy way to rent a <br/> car at a low price</h5>
					<p>Providing cheap car rental services <br/> and safe and comfortable facilities.</p>
					<button>Rental Car</button>
					<img src="/images/car2.png" alt="image2" width={340} height={108}/>
				</div>
			</div>

		</div>

	</div>

</div>




<div class="reservation d-flex">
	<div class="container">
		<div class="reservation-items d-flex justify-content-between">

			{# <div class="col-lg-5"> #}
				<div class="pick-up">
					<div class="title">Pick - Up</div>
					<div class="info">
						<div class="locations">
							<h5>Locations</h5>
							<select name="" id="" class="form-select">
								<option value="">Select your city</option>
							</select>
						</div>
						<div class="date">
							<h5>Date</h5>
							<select name="" id="" class="form-select">
								<option value="">Select your date</option>
							</select>
						</div>
						<div class="time">
							<h5>Time</h5>
							<select name="" id="" class="form-select">
								<option value="">Select your time</option>
							</select>
						</div>
					</div>
				</div>
			{# </div> #}


			<div class="col-lg-1 d-flex align-items-center justify-content-center">
				<button class="change-btn d-flex">
					<i class="fi fi-sr-exchange"></i>
				</button>
			</div>


			{# <div class="col-lg-5"> #}
				<div class="drop-off">
					<div class="title">Drop - Off</div>
					<div class="info">
						<div class="locations">
							<h5>Locations</h5>
							<select name="" id="" class="form-select">
								<option value="">Select your city</option>
							</select>
						</div>
						<div class="date">
							<h5>Date</h5>
							<select name="" id="" class="form-select">
								<option value="">Select your date</option>
							</select>
						</div>
						<div class="time">
							<h5>Time</h5>
							<select name="" id="" class="form-select">
								<option value="">Select your time</option>
							</select>
						</div>
					</div>
				</div>
			{# </div> #}
			
		</div>		
		




	</div>

</div>





<div class="popular-cars">
	<div class="container">
		<div class="title d-flex justify-content-between">
			<h3>Popular Car</h3>
			<a href="{{path("app_cars")}}">View All</a>
		</div>
		
		{# <div class="cars">
						
			<div class="row">
				{% for car in popularCars %}
				<div class="col-lg-3">
					<div class="car">
						<div class="car-name d-flex justify-content-between">
							<div class="name">
								<h3>{{car.name}} </h3>
								<span>{{car.type}}</span>
							</div>
							<div class="favorite">
								<i class="fi fi-rs-heart"></i>
							</div>
							<input type="hidden" name="car_id" value={{car.id}}>
						</div>
						<div class="group">
							<div class="car-img">
								<img src="{{car.img}}" alt="{{car.name}} car image."/>
							</div>
							<div class="options d-flex">
								<div class="litres"><i class="fi fi-tr-gas-pump"></i> {{car.gasoline}}L</div>
								<div class="gear"><i class="fi fi-ts-tire"></i> {{car.steering}}</div>
								<div class="seats"><i class="fi fi-tr-seat-airline"></i>{{car.capacity}} People</div>
							</div>
						</div>
						<div class="rent-price d-flex align-items-center justify-content-between">
							<div class="price">${{car.price}}.00/
								<span>day</span>
							</div>
							<div class="rent-btn">
								<a href="/car/{{car.id}}">Rent Now</a>
							</div>
						</div>
					</div>
				</div>

				{% endfor %}		
			</div>
		
		</div> #}

<div class="cars-slider">
	<div class="slider-track row">
		{% for car in popularCars %}
			<div class="car-slide col-lg-3 col-12">
				<div class="car">
					<div class="car-name d-flex justify-content-between">
						<div class="name">
							<h3>{{ car.name }}</h3>
							<span>{{ car.type }}</span>
						</div>
						<div class="favorite">
							{% set found = false %}
							{% for favorite in favoriteCarUser %}
								{% if favorite.car.id == car.id %}
									{% set found = true %}
								{% endif %}
							{% endfor %}
							{% if found %}
								<i class="fi fi-sr-heart active"></i>
							{% else %}
								<i class="fi fi-rr-heart"></i>
							{% endif %}
						</div>
						<input type="hidden" name="car_id" value="{{ car.id }}">
					</div>
					<div class="group">
						<div class="car-img">
							<img src="{{ car.img }}" alt="{{ car.name }} car image."/>
						</div>
						<div class="options d-flex">
							<div class="litres">
								<i class="fi fi-tr-gas-pump"></i>
								{{ car.gasoline }}L</div>
							<div class="gear">
								<i class="fi fi-ts-tire"></i>
								{{ car.steering }}</div>
							<div class="seats">
								<i class="fi fi-tr-seat-airline"></i>
								{{ car.capacity }}
								People</div>
						</div>
					</div>
					<div class="rent-price d-flex align-items-center justify-content-between">
						<div class="price">${{ car.price }}.00/
							<span>day</span>
						</div>
						<div class="rent-btn">
							<a href="/car/{{ car.id }}">Rent Now</a>
						</div>
					</div>
				</div>
			</div>
		{% endfor %}
	</div>
</div>



	</div>
</div>


<div class="recommandation-car">
	<div class="container">
	<div class="title">
		<h3>Recommandation Car</h3>
	</div>
	<div class="cars">
	<div class="row">
	{% for car in recommandationCars %}
			<div class="col-lg-3">
					<div class="car">
						<div class="car-name d-flex justify-content-between">
							<div class="name">
								<h3>{{car.name}}</h3>
								<span>{{car.type}}</span>
							</div>
							<div class="favorite">
								{% set found = false %}
								{% for favorite in favoriteCarUser %}
									{% if favorite.car.id == car.id %}
										{% set found = true %}
									{% endif %}
								{% endfor %}
								{% if found %}
									<i class="fi fi-sr-heart active"></i>
								{% else %}
									<i class="fi fi-rr-heart"></i>
								{% endif %}
							</div>

							<input type="hidden" name="car_id" value={{car.id}}>
						</div>
						<div class="group">
							<div class="car-img">
								<img src="{{car.img}}" alt=""/>
							</div>
							<div class="options d-flex">
								<div class="litres"><i class="fi fi-tr-gas-pump"></i>{{car.gasoline}}L</div>
								<div class="gear"><i class="fi fi-ts-tire"></i> {{car.steering}}</div>
								<div class="seats"><i class="fi fi-tr-seat-airline"></i>{{car.capacity}} People</div>
							</div>
						</div>
						
						<div class="rent-price d-flex align-items-center justify-content-between">
							<div class="price">${{car.price}}.00/
								<span>day</span>
							</div>
							<div class="rent-btn">
								<a href="/car/{{car.id}}">Rent Now</a>
							</div>
						</div>
					</div>
				</div>
	{% endfor %}
	</div>
</div>
<div class="d-flex align-items-center">
	<button class="d-flex show-more">Show more car</button>
	<p>{{allCars}}</p>
</div>

</div>
</div>

{% include 'footer.html.twig' %}
<script>

let favoriteCar = document.querySelectorAll(".car .favorite i");
favoriteCar.forEach(function(car){
	car.addEventListener("click", function(){
		console.log(this);
		let carId = this.parentNode.nextElementSibling.value;
		if(this.classList.contains("active")){
			this.classList.add("fi-rr-heart");
			this.classList.remove("fi-sr-heart");
			this.classList.remove("active");
			fetch("/favorite", {
					method: "DELETE",
					headers: {
							"Content-Type": "application/json",
					},
					body:JSON.stringify({id : carId})
			})
			.then((response) => {
					if (!response.ok) {
							throw new Error("Network response was not ok");
					}
					return response.text();
			});
		}
		else{
			this.classList.remove("fi-rr-heart");
			this.classList.add("fi-sr-heart");
			this.classList.add("active");

			fetch("/favorite", {
					method: "POST",
					headers: {
							"Content-Type": "application/json",
					},
					body:JSON.stringify({id : carId})
			})
			.then((response) => {
					if (!response.ok) {
							throw new Error("Network response was not ok");
					}
					return response.text();
			});
		}

	});
});

let offset = 8;
const limit = 4;
const showMoreButton = document.querySelector(".show-more");
const carsContainer = document.querySelector(".recommandation-car .cars .row");

showMoreButton.addEventListener("click", function() {
    fetch("/getCars", {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
        },
        body: JSON.stringify({ offset, limit }),
    })
    .then(response => {
        if (response.status === 204) {
            showMoreButton.remove();
            return;
        }
        if (!response.ok) {
            return response.json().then(err => {throw new Error(err.error)});
        }
        return response.json();
    })
    .then(carData => {
        if (carData) {
            carData.forEach(car => {
                const carDiv = `
								<div class="col-lg-3">
									<div class="car">
										<div class="car-name d-flex justify-content-between">
											<div class="name">
												<h3>${car.name}</h3>
												<span>${car.type}</span>
											</div>
											<div class="favorite">
												<i class="fi fi-rs-heart"></i>
											</div>
											<input type="hidden" name="car_id" value=${car.id}>
										</div>
										<div class="group">
											<div class="car-img">
												<img src="${car.img}" alt=""/>
											</div>
											<div class="options d-flex">
												<div class="litres">
													<i class="fi fi-tr-gas-pump"></i>
													${car.gasoline}L</div>
												<div class="gear">
													<i class="fi fi-ts-tire"></i>
													${car.steering}</div>
												<div class="seats">
													<i class="fi fi-tr-seat-airline"></i>
													${car.capacity}
													People</div>
											</div>
										</div>
										<div class="rent-price d-flex align-items-center justify-content-between">
											<div class="price">$${car.price}.00/
												<span>day</span>
											</div>
											<div class="rent-btn">
												<a href="/car/${car.id}">Rent Now</a>
											</div>
										</div>
									</div>
								</div>
								`;
                carsContainer.innerHTML += carDiv;
            });
            offset += limit;
						let favoriteCar = document.querySelectorAll(".cars .car .favorite i");

		favoriteCar.forEach(function(car){
			car.addEventListener("click", function(){
				let carId = this.parentNode.nextElementSibling.value;
				if(this.classList.contains("active")){
					this.classList.add("fi-rr-heart");
					this.classList.remove("fi-ss-heart");
					this.classList.remove("active");
							fetch("/favorite", {
									method: "DELETE",
									headers: {
											"Content-Type": "application/json",
									},
									body:JSON.stringify({id : carId})
							})
							.then((response) => {
									if (!response.ok) {
											throw new Error("Network response was not ok");
									}
									return response.text();
							});
						}
						else{
							this.classList.remove("fi-rr-heart");
							this.classList.add("fi-ss-heart");
							this.classList.add("active");

							fetch("/favorite", {
									method: "POST",
									headers: {
											"Content-Type": "application/json",
									},
									body:JSON.stringify({id : carId})
							})
							.then((response) => {
									if (!response.ok) {
											throw new Error("Network response was not ok");
									}
									return response.text();
							});
						}

					});
				});

			  }
    })
    .catch(error => {
        console.error("Error:", error.message);
    });

});

document.addEventListener('DOMContentLoaded', () => {
    const sliderTrack = document.querySelector('.slider-track');
    const slides = document.querySelectorAll('.car-slide');
    let slideWidth = slides[0].clientWidth;
    const totalSlides = slides.length;
    let visibleSlides = 4;

    let isDragging = false;
    let startX = 0;
    let currentTranslate = 0;
    let prevTranslate = 0;

    function calculateBounds() {
        slideWidth = slides[0].clientWidth;
        visibleSlides = window.innerWidth <= 767 ? 1 : 4;
        const maxTranslate = 0; 
        const minTranslate = -(slideWidth * (totalSlides - visibleSlides));

        return { minTranslate, maxTranslate };
    }

    function setSliderPosition() {
        const { minTranslate, maxTranslate } = calculateBounds();
        currentTranslate = Math.max(minTranslate, Math.min(currentTranslate, maxTranslate));
        sliderTrack.style.transform = `translateX(${currentTranslate}px)`;
    }

    function handleMouseDown(e) {
        isDragging = true;
        startX = e.clientX;
        sliderTrack.style.transition = 'none';
    }

    function handleMouseMove(e) {
        if (!isDragging) return;
        const currentX = e.clientX;
        const distance = currentX - startX;
        currentTranslate = prevTranslate + distance;

        const { minTranslate, maxTranslate } = calculateBounds();
        currentTranslate = Math.max(minTranslate, Math.min(currentTranslate, maxTranslate));
        setSliderPosition();
    }

    function handleMouseUp() {
        isDragging = false;
        prevTranslate = currentTranslate;
        sliderTrack.style.transition = 'transform 0.2s ease-out'; 

        const snappedTranslate = Math.round(currentTranslate / slideWidth) * slideWidth;
        currentTranslate = snappedTranslate;

        setSliderPosition();
    }

    sliderTrack.addEventListener('mousedown', handleMouseDown);
    window.addEventListener('mousemove', handleMouseMove);
    window.addEventListener('mouseup', handleMouseUp);

    sliderTrack.addEventListener('dragstart', (e) => e.preventDefault());
    sliderTrack.addEventListener('mouseleave', () => {
        if (isDragging) handleMouseUp();
    });

    window.addEventListener('resize', () => {
        setSliderPosition();
    });
});

</script>
{% endblock %}

