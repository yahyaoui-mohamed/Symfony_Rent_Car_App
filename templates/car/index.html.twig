{% extends 'base.html.twig' %}

{% block title %}Car details{% endblock %}

{% block body %}

{% include 'navbar.html.twig' %}

<div class="car-details">
    <div class="container">
        <div class="row">

            <div class="col-lg-6">
                <div class="car-images">
                    <div class="main-img">
                        <img src="{{car.img}}" alt=""/>
                    </div>
                    <div class="thumbnails">
                        {% if car.otherImg|length > 3 %}
                            <div class="left-button">
                                <i class="fi fi-rr-angle-left"></i>
                            </div>
                            <div class="right-button">
                                <i class="fi fi-rr-angle-right"></i>
                            </div>
                        {% endif %}
                        
                        <div class="row">
                            <div class="col-lg-4 col-md-4 col-4">
                                <div class="thumbnail-container active">
                                    <img src="{{car.img}}" alt="">
                                </div>
                            </div>
                            {% for img in car.otherImg %}
                            <div class="col-lg-4 col-md-4 col-4">
                                <div class="thumbnail-container">
                                    <img src="{{img}}" alt="">
                                </div>
                            </div>
                            {% endfor %}
                        </div>

                    </div>
                </div>
            </div>

            <div class="col-lg-6">
                <div class="car-description">
                    <div class="car-name d-flex justify-content-between">
                        <h3>{{car.name}}</h3>
                        <div class="favorite">
                            {% if isFav %}
                                <i class="fi fi-ss-heart active"></i>
                            {% else %}
                                <i class="fi fi-rr-heart"></i>
                            {% endif %}
                        </div>
                        <input type="hidden" name="car_id" value="{{ car.id }}" id="carid">
                    </div>
                    <div class="desc">
                        <p>{{car.description}}</p>
                    </div>
                    <div class="options">
                        <div class="row">
                            <div class="col-lg-6 col-md-6 col-6">
                                <div class="option d-flex justify-content-between">
                                    <h3>Type Car</h3>
                                    <span>{{car.type}}</span>
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-6 col-6">
                                <div class="option d-flex justify-content-between">
                                    <h3>Capacity</h3>
                                    <span>{{car.capacity}} Person</span>
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-6 col-6">
                                <div class="option d-flex justify-content-between">
                                    <h3>Steering</h3>
                                    <span>{{car.steering}}</span>
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-6 col-6">
                                <div class="option d-flex justify-content-between">
                                    <h3>Gasoline</h3>
                                    <span>{{car.gasoline}}L</span>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="option d-flex justify-content-between align-items-center">
                                    <h3>Days</h3>
                                    {{ form_start(form) }}
                                        {{ form_row(form.days) }}
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="price d-flex justify-content-between">
                        <div class="price-day">
                            <h3>${{car.price}}.00/<span>day</span></h3>
                            {% if car.oldPrice %}
                                <p class="old-price">${{car.oldPrice}}.00</p>
                            {% endif %}
                        </div>
                        {{ form_row(form.proceedToCheckOut) }}
                        {{ form_end(form) }}
                    </div>
                </div>
            </div>

        </div>

        <div class="reviews">
            <h3>Reviews
                <span class="reviews-count">{{reviews|length}}</span>
            </h3>
            <div class="items">
                {% if reviews|length > 0 %}
                    {% for review in reviews %}
                        <div class="review-item">
                            <div class="row">
                                <div class="col-lg-1 col-md-2 col-2">
                                    <div class="reviewer-img">
                                        <img src="/images/avatar.png" alt="">
                                    </div>
                                </div>
                                <div class="col-lg-9 col-md-7 col-7">
                                    <div class="d-flex">
                                        <div class="reviewer-name">
                                            <h3>{{review.fullname|capitalize}}</h3>
                                        </div>
                                    </div>
                                    <div class="review-description">
                                        <p>{{review.review}}</p>
                                    </div>
                                </div>
                                <div class="col-lg-2 col-md-3 col-3">
                                    <div class="review-date">
                                        <p>{{review.date|date("d M y")}}</p>
                                    </div>
                                </div>
                            </div>
                        </div>

                    {% endfor %}
                {% else %}
                    <p>No reviews for this car.</p>
                {% endif %}

            </div>
        </div>

        <div class="add-review">
            {% if hasReviewed %}
                <p>You have already post a review.</p>
            {% else %}
                <h3>Add review</h3>
                <form method="POST" class="form-review">
                    <div class="mb-3">
                        <input type="text" id="fullname" class="form-control" placeholder="Full name">
                    </div>
                    <div class="mb-3">
                        <textarea id="review" class="form-control" placeholder="Your review"></textarea>
                    </div>
                    <div class="mb-3">
                        <button type="submit" id="form-submit">Submit</button>
                    </div>
                </form>
            {% endif %}
        </div>

        
    </div>
</div>

<div class="recent-car">
    <div class="container">
        <div class="cars-slider">
            <div class="title d-flex justify-content-between">
                <h3>Recent Car</h3>
                <a href="{{path("app_cars")}}">View All</a>
            </div>

            <div class="slider-track row">
                {% for car in recentCars %}
                    <div class="car-slide col-lg-3 col-12">
                        <div class="car">
                            <div class="car-name d-flex justify-content-between">
                                <div class="name">
                                    <h3>{{ car.name }}</h3>
                                    <span>{{ car.type }}</span>
                                </div>
                                <div class="favorite">
                                    {% set found = false %}
                                    {% for favorite in favoriteCarUser %}
                                        {% if favorite.car.id == car.id %}
                                            {% set found = true %}
                                        {% endif %}
                                    {% endfor %}
                                    {% if found %}
                                        <i class="fi fi-ss-heart active"></i>
                                    {% else %}
                                        <i class="fi fi-rr-heart"></i>
                                    {% endif %}
                                </div>
                                <input type="hidden" name="car_id" value="{{ car.id }}">
                            </div>
                            <div class="group">
                                <div class="car-img">
                                    <img src="{{ car.img }}" alt="{{ car.name }} car image."/>
                                </div>
                                <div class="options d-flex">
                                    <div class="litres">
                                        <i class="fi fi-rr-gas-pump"></i>
                                        {{ car.gasoline }}L</div>
                                    <div class="gear">
                                        <i class="fi fi-rr-tire"></i>
                                        {{ car.steering }}</div>
                                    <div class="seats">
                                        <i class="fi fi-rr-seat-airline"></i>
                                        {{ car.capacity }}
                                        People</div>
                                </div>
                            </div>
                            <div class="rent-price d-flex align-items-center justify-content-between">
                                <div class="price">${{ car.price }}.00/
                                    <span>day</span>
                                </div>
                                <div class="rent-btn">
                                    <a href="/car/{{ car.id }}">Rent Now</a>
                                </div>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
        </div>
    </div>
</div>

<div class="recommandation-car">
    <div class="container">
        <div class="cars-slider">
            <div class="title d-flex justify-content-between">
                <h3>Recommandation Car</h3>
                <a href="{{path("app_cars")}}">View All</a>
            </div>

            <div class="slider-track row">
                {% for car in recommandationCars %}
                    <div class="car-slide col-lg-3 col-12">
                        <div class="car">
                            <div class="car-name d-flex justify-content-between">
                                <div class="name">
                                    <h3>{{ car.name }}</h3>
                                    <span>{{ car.type }}</span>
                                </div>
                                <div class="favorite">
                                    {% set found = false %}
                                    {% for favorite in favoriteCarUser %}
                                        {% if favorite.car.id == car.id %}
                                            {% set found = true %}
                                        {% endif %}
                                    {% endfor %}
                                    {% if found %}
                                        <i class="fi fi-ss-heart active"></i>
                                    {% else %}
                                        <i class="fi fi-rr-heart"></i>
                                    {% endif %}
                                </div>
                                <input type="hidden" name="car_id" value="{{ car.id }}">
                            </div>
                            <div class="group">
                                <div class="car-img">
                                    <img src="{{ car.img }}" alt="{{ car.name }} car image."/>
                                </div>
                                <div class="options d-flex">
                                    <div class="litres">
                                        <i class="fi fi-rr-gas-pump"></i>
                                        {{ car.gasoline }}L</div>
                                    <div class="gear">
                                        <i class="fi fi-rr-tire"></i>
                                        {{ car.steering }}</div>
                                    <div class="seats">
                                        <i class="fi fi-rr-seat-airline"></i>
                                        {{ car.capacity }}
                                        People</div>
                                </div>
                            </div>
                            <div class="rent-price d-flex align-items-center justify-content-between">
                                <div class="price">${{ car.price }}.00/
                                    <span>day</span>
                                </div>
                                <div class="rent-btn">
                                    <a href="/car/{{ car.id }}">Rent Now</a>
                                </div>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
        </div>
    </div>
</div>


{% include 'footer.html.twig' %}

<script>
let activeImg = document.querySelector(".thumbnails .thumbnail-container.active img");
let favoriteCar = document.querySelectorAll(".car .favorite i");
let mainImg = document.querySelector(".main-img img");
let car = document.querySelector(".car-description .car-name .favorite i");
let carId = car.parentNode.nextElementSibling.value;

document.querySelectorAll(".thumbnails img").forEach(function(img){
    img.addEventListener("click", function(){
        if(!this.parentNode.classList.contains("active")){
            activeImg.parentNode.classList.remove("active");
            this.parentNode.classList.add("active");
            activeImg = this;
            mainImg.setAttribute("src", activeImg.src);
    }});
});


favoriteCar.forEach(function(car){
	
    car.addEventListener("click", function(){
        let carId = this.parentNode.nextElementSibling.value;
		if(this.classList.contains("active")){
			this.classList.add("fi-rr-heart");
			this.classList.remove("fi-ss-heart");
			this.classList.remove("active");
            fetch("/favorite", {
					method: "DELETE",
					headers: {
							"Content-Type": "application/json",
					},
					body:JSON.stringify({id : carId})
			})
			.then((response) => {
					if (!response.ok) {
							throw new Error("Network response was not ok");
					}
					return response.text();
			});
		}
		else{
			this.classList.remove("fi-rr-heart");
			this.classList.add("fi-ss-heart");
			this.classList.add("active");
            fetch("/favorite", {
					method: "POST",
					headers: {
							"Content-Type": "application/json",
					},
					body:JSON.stringify({id : carId})
			})
			.then((response) => {
					if (!response.ok) {
							throw new Error("Network response was not ok");
					}
					return response.text();
			});
		}
	});
});


car.addEventListener("click", function(){

    if(this.classList.contains("active")){
        this.classList.add("fi-rr-heart");
        this.classList.remove("fi-ss-heart");
        this.classList.remove("active");
        fetch("/favorite", {
                method: "DELETE",
                headers: {
                        "Content-Type": "application/json",
                },
                body:JSON.stringify({id : carId})
        })
        .then((response) => {
                if (!response.ok) {
                        throw new Error("Network response was not ok");
                }
                return response.text();
        });
    }
    else{
        this.classList.remove("fi-rr-heart");
        this.classList.add("fi-ss-heart");
        this.classList.add("active");

        fetch("/favorite", {
                method: "POST",
                headers: {
                        "Content-Type": "application/json",
                },
                body:JSON.stringify({id : carId})
        })
        .then((response) => {
                if (!response.ok) {
                        throw new Error("Network response was not ok");
                }
                return response.text();
        });
    }

});

document.addEventListener('DOMContentLoaded', () => {
    let leftButton = document.querySelector('.left-button'),
    rightButton = document.querySelector('.right-button'),
    row = document.querySelector('.thumbnails .row'),
    thumbnailContainers = row.querySelectorAll('.col-lg-4'),
    scrollAmount = 0,
    scrollStep = 150,
    visibleWidth = row.parentElement.offsetWidth,
    totalWidth = Array.from(thumbnailContainers).reduce((sum, item) => sum + item.offsetWidth, 0),
    maxScroll = Math.max(0, totalWidth - visibleWidth);

    if(leftButton && rightButton){
        leftButton.addEventListener('click', () => {
            if (scrollAmount > 0) {
                scrollAmount = Math.max(0, scrollAmount - scrollStep);
                row.style.transform = `translateX(-${scrollAmount}px)`;
                row.style.transition = 'transform 0.3s ease-in-out';
            }
        });

        rightButton.addEventListener('click', () => {
            if (scrollAmount < maxScroll) {
                scrollAmount = Math.min(maxScroll, scrollAmount + scrollStep);
                row.style.transform = `translateX(-${scrollAmount}px)`;
                row.style.transition = 'transform 0.3s ease-in-out';
            }
        });
    }
});


document.querySelector(".form-review").addEventListener("submit", function(e) {
    e.preventDefault(); 
    let fullname = document.getElementById("fullname").value;
    let review = document.getElementById("review").value;
    let carId = document.getElementById("carid").value;

    fetch("/review", {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
        },
        body: JSON.stringify({ fullname, review, carId })
    })
    .then(resp => {
        if(resp.status === 200){
            let months = ['Jan','Feb','Mars','Apr','May','Jun','Jul','Août','Sep','Oct','Nov','Dec'];
            let container = document.querySelector(".add-review");
            let p = document.createElement("p");
            let reviewsCount = document.querySelector(".reviews-count");
            p.textContent = "Thank you for your review !";
            container.innerHTML = "";
            container.appendChild(p);
            let reviewsContainer = document.querySelector(".reviews .items");
            let el = `<div class="review-item">
                <div class="row">
                    <div class="col-lg-1 col-md-2 col-2">
                        <div class="reviewer-img">
                            <img src="/images/avatar.png" alt="">
                        </div>
                    </div>
                    <div class="col-lg-9 col-md-7 col-7">
                        <div class="d-flex">
                            <div class="reviewer-name">
                                <h3>${fullname}</h3>
                            </div>
                        </div>
                        <div class="review-description">
                            <p>${review}</p>
                        </div>
                    </div>
                    <div class="col-lg-2 col-md-3 col-3">
                        <div class="review-date">
                            <p>${new Date().getDate() + " " + months[new Date().getMonth()] + " " + new Date().getFullYear()}</p>
                        </div>
                    </div>
                </div>
            </div>`;
            let paragraph = document.querySelector(".reviews .items p");
            if(paragraph) paragraph.remove();
            reviewsContainer.innerHTML += el;
            reviewsCount.innerText = +reviewsCount.innerText + 1;
        }
        return;
    });

});

document.addEventListener('DOMContentLoaded', () => {
    const sliderTrack = document.querySelector('.recent-car .slider-track');
    const slides = document.querySelectorAll('.car-slide');
    let slideWidth = slides[0].clientWidth;
    const totalSlides = slides.length;
    let visibleSlides = 4;

    let isDragging = false;
    let startX = 0;
    let currentTranslate = 0;
    let prevTranslate = 0;

    function calculateBounds() {
        slideWidth = slides[0].clientWidth;
        visibleSlides = window.innerWidth <= 767 ? 1 : 4;
        const maxTranslate = 0; 
        const minTranslate = -(slideWidth * (totalSlides - visibleSlides));

        return { minTranslate, maxTranslate };
    }

    function setSliderPosition() {
        const { minTranslate, maxTranslate } = calculateBounds();
        currentTranslate = Math.max(minTranslate, Math.min(currentTranslate, maxTranslate));
        sliderTrack.style.transform = `translateX(${currentTranslate}px)`;
    }

    function handleMouseDown(e) {
        isDragging = true;
        startX = e.clientX;
        sliderTrack.style.transition = 'none';
    }

    function handleMouseMove(e) {
        if (!isDragging) return;
        const currentX = e.clientX;
        const distance = currentX - startX;
        currentTranslate = prevTranslate + distance;

        const { minTranslate, maxTranslate } = calculateBounds();
        currentTranslate = Math.max(minTranslate, Math.min(currentTranslate, maxTranslate));
        setSliderPosition();
    }

    function handleMouseUp() {
        isDragging = false;
        prevTranslate = currentTranslate;
        sliderTrack.style.transition = 'transform 0.2s ease-out'; 

        const snappedTranslate = Math.round(currentTranslate / slideWidth) * slideWidth;
        currentTranslate = snappedTranslate;

        setSliderPosition();
    }

    sliderTrack.addEventListener('mousedown', handleMouseDown);
    window.addEventListener('mousemove', handleMouseMove);
    window.addEventListener('mouseup', handleMouseUp);

    sliderTrack.addEventListener('dragstart', (e) => e.preventDefault());
    sliderTrack.addEventListener('mouseleave', () => {
        if (isDragging) handleMouseUp();
    });

    window.addEventListener('resize', () => {
        setSliderPosition();
    });
});

document.addEventListener('DOMContentLoaded', () => {
    const sliderTrack = document.querySelector('.recommandation-car .slider-track');
    const slides = document.querySelectorAll('.car-slide');
    let slideWidth = slides[0].clientWidth;
    const totalSlides = slides.length;
    let visibleSlides = 4;

    let isDragging = false;
    let startX = 0;
    let currentTranslate = 0;
    let prevTranslate = 0;

    function calculateBounds() {
        slideWidth = slides[0].clientWidth;
        visibleSlides = window.innerWidth <= 767 ? 1 : 4;
        const maxTranslate = 0; 
        const minTranslate = -(slideWidth * (totalSlides - visibleSlides));

        return { minTranslate, maxTranslate };
    }

    function setSliderPosition() {
        const { minTranslate, maxTranslate } = calculateBounds();
        currentTranslate = Math.max(minTranslate, Math.min(currentTranslate, maxTranslate));
        sliderTrack.style.transform = `translateX(${currentTranslate}px)`;
    }

    function handleMouseDown(e) {
        isDragging = true;
        startX = e.clientX;
        sliderTrack.style.transition = 'none';
    }

    function handleMouseMove(e) {
        if (!isDragging) return;
        const currentX = e.clientX;
        const distance = currentX - startX;
        currentTranslate = prevTranslate + distance;

        const { minTranslate, maxTranslate } = calculateBounds();
        currentTranslate = Math.max(minTranslate, Math.min(currentTranslate, maxTranslate));
        setSliderPosition();
    }

    function handleMouseUp() {
        isDragging = false;
        prevTranslate = currentTranslate;
        sliderTrack.style.transition = 'transform 0.2s ease-out'; 

        const snappedTranslate = Math.round(currentTranslate / slideWidth) * slideWidth;
        currentTranslate = snappedTranslate;

        setSliderPosition();
    }

    sliderTrack.addEventListener('mousedown', handleMouseDown);
    window.addEventListener('mousemove', handleMouseMove);
    window.addEventListener('mouseup', handleMouseUp);

    sliderTrack.addEventListener('dragstart', (e) => e.preventDefault());
    sliderTrack.addEventListener('mouseleave', () => {
        if (isDragging) handleMouseUp();
    });

    window.addEventListener('resize', () => {
        setSliderPosition();
    });
});


</script>
{% endblock %}
