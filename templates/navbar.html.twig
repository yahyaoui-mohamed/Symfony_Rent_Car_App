<div class="navbar animate__animated">
	<div class="container">
			<div class="navbar-brand">
				<a href="{{path("app_index")}}">Morent</a>
			</div>
			<div class="search-bar">
				<input type="text" placeholder="Search something else" id="search"/>
				<i class="fi fi-rr-search"></i>
				<i class="fi fi-rr-settings-sliders"></i>
				<div class="car-search">
				</div>
			</div>
			<div class="settings">
				<div class="favorite">
					<a href="{{path("app_favorite")}}" class="navbar-item">
						<i class="fi fi-rr-heart"></i>
					</a>
				</div>
				<div class="notification">
					<a href="{{path("app_notification")}}" class="navbar-item">
						<i class="fi fi-rr-bell"></i>
					</a>
				</div>
				<div class="user">
					{% if app.user %}
						{% if "ROLE_ADMIN" in app.user.roles  %}
							<a href="./" class="navbar-item">
								<i class="fi fi-rr-user"></i>
							</a>
                            <div class="user-dropdown">
                                <a href="{{path("app_admin")}}">
                                    Dashboard
                                </a>
                                <a href="{{path("app_logout")}}">
                                    Logout
                                </a>
                            </div>
						{% elseif "ROLE_USER" in app.user.roles %}
                            <a href="./" class="navbar-item">
                                <i class="fi fi-rr-user"></i>
                            </a>
                            <div class="user-dropdown">
                                <a href="{{path("app_account")}}">
                                    Account
                                </a>
                                <a href="{{path("app_logout")}}">
                                    Logout
                                </a>
                            </div>
						{% endif %}
					{% else %}
                        <a href="./" class="navbar-item">
                            <i class="fi fi-rr-user"></i>
                        </a>
                        <div class="user-dropdown">
                            <a href="{{path("app_login")}}" class="navbar-item">
                                Login
                            </a>
                        </div>
					{% endif %}
				</div>
			</div>
	</div>
</div>
{% block globalscripts %}

	{# <script>
		let navbar = document.querySelector(".navbar");
		document.addEventListener("scroll",function(){
			if(scrollY > 200){
				navbar.classList.add("animate__fadeInDown");
				navbar.classList.add("fixed");
			}
			else{
				navbar.classList.remove("animate__fadeInDown");
				navbar.classList.remove("fixed");
			}
		});
	</script> #}

<script>
let carContainer = document.querySelector(".car-search");
let abortController = null; // To track and cancel the current fetch request

document.getElementById("search").addEventListener("input", function () {
    const searchValue = this.value.trim(); // Trim to avoid unnecessary spaces

    carContainer.style.display = "block";
    carContainer.innerHTML = ""; // Clear previous results immediately

    if (searchValue === "") {
        carContainer.style.display = "none"; // Hide results when the input is empty
        return;
    }

    // If there is an ongoing request, abort it
    if (abortController) {
        abortController.abort();
    }

    // Create a new AbortController for the current fetch request
    abortController = new AbortController();
    const signal = abortController.signal;

    // Initiate a new fetch request
    fetch("/search", {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
        },
        body: JSON.stringify({ prefix: searchValue }),
        signal: signal, // Attach the abort signal
    })
        .then((response) => {
            if (response.status === 204) {
                carContainer.innerHTML = "<p>No car found.</p>";
            } else {
                return response.json();
            }
        })
        .then((res) => {
            if (res) {
                res.forEach((car) => {
                    carContainer.innerHTML += `
                        <div class="car-item">
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-3">
                                    <img src="${car.img}" alt="">
                                </div>
                                <div class="col-lg-6 col-md-6 col-6">
                                    <a href="/car/${car.id}">${car.name}</a>
                                    <span>${car.type}</span>
                                </div>
                                <div class="col-lg-3 col-md-3 col-3">
                                    <h3>$${car.price}</h3>
                                </div>
                            </div>
                        </div>
                    `;
                });
            }
        })
});


{# let carContainer = document.querySelector(".car-search");
let currentSearchRequest = null;  // To track the current request

document.getElementById("search").addEventListener("input", function () {
    const searchValue = this.value.trim(); // Trim to avoid unnecessary spaces

    carContainer.style.display = "block";
    carContainer.innerHTML = ""; // Clear previous results immediately

    if (searchValue === "") {
        carContainer.style.display = "none"; // Hide results when the input is empty
        return;
    }

    // Cancel the previous search if it was in progress
    if (currentSearchRequest) {
        currentSearchRequest.cancel();  // Cancel the previous request
    }

    // Create a new object to track the request
    const searchRequest = {
        cancel: () => {
            currentSearchRequest = null;
        }
    };

    // Assign the new request to the current search request
    currentSearchRequest = searchRequest;

    // Make a fetch request
    fetch("/search", {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
        },
        body: JSON.stringify({ prefix: searchValue })
    })
    .then((response) => {
        if (response.status === 204) {
            carContainer.innerHTML = "<p>No car found.</p>";
        } else {
            return response.json();
        }
    })
    .then((res) => {
        // Ensure we only update the results for the latest search
        if (currentSearchRequest === searchRequest) {
            if (res) {
                res.forEach((car) => {
                    carContainer.innerHTML += `
                        <div class="car-item">
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-3">
                                    <img src="${car.img}" alt="">
                                </div>
                                <div class="col-lg-6 col-md-6 col-6">
                                    <a href="/car/${car.id}">${car.name}</a>
                                    <span>${car.type}</span>
                                </div>
                                <div class="col-lg-3 col-md-3 col-3">
                                    <h3>$${car.price}</h3>
                                </div>
                            </div>
                        </div>
                    `;
                });
            }
        }
    });
}); #}

{# let carContainer = document.querySelector(".car-search");
let currentSearchTimestamp = 0;  // To track the timestamp of the current search request

document.getElementById("search").addEventListener("input", function () {
    const searchValue = this.value.trim(); // Trim to avoid unnecessary spaces

    carContainer.style.display = "block";
    carContainer.innerHTML = ""; // Clear previous results immediately

    if (searchValue === "") {
        carContainer.style.display = "none"; // Hide results when the input is empty
        return;
    }

    // Increment the search timestamp with each new input
    const searchTimestamp = ++currentSearchTimestamp;

    // Make a fetch request
    fetch("/search", {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
        },
        body: JSON.stringify({ prefix: searchValue })
    })
    .then((response) => {
        if (response.status === 204) {
            carContainer.innerHTML = "<p>No car found.</p>";
        } else {
            return response.json();
        }
    })
    .then((res) => {
        // Check if this response is from the latest search (based on timestamp)
        if (searchTimestamp === currentSearchTimestamp) {
            if (res) {
                res.forEach((car) => {
                    carContainer.innerHTML += `
                        <div class="car-item">
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-3">
                                    <img src="${car.img}" alt="">
                                </div>
                                <div class="col-lg-6 col-md-6 col-6">
                                    <a href="/car/${car.id}">${car.name}</a>
                                    <span>${car.type}</span>
                                </div>
                                <div class="col-lg-3 col-md-3 col-3">
                                    <h3>$${car.price}</h3>
                                </div>
                            </div>
                        </div>
                    `;
                });
            }
        }
    })
    .catch((error) => {
        console.error("Fetch error:", error);
    });
}); #}

document.querySelector(".user .navbar-item").addEventListener("click", function(e){
    e.preventDefault();
    let dropdown = document.querySelector(".user-dropdown");
    if(dropdown.classList.contains("active")){
        dropdown.classList.remove("active");
    }
    else{
        dropdown.classList.add("active");
    }
});

</script>

{% endblock %}